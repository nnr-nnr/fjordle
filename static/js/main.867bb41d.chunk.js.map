{"version":3,"sources":["utils/Values.js","utils/Context.js","components/Cell.js","components/Row.js","components/Grid.js","components/Key.js","utils/hooks.js","components/Keyboard.js","components/Map.js","components/Globe.js","components/Popups/SolvePopup.js","components/Popups/InfoPopup.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["coordValues","lat","lng","city","prov","state","name","continent","strCoords","HasSolvedContext","React","createContext","HasSolvedUpdateContext","useHasSolvedContext","useContext","AllGuessContext","AllGuessUpdateContext","AnswerContext","useAnswer","preFixCoordStrs","coord","isLng","absCoord","Math","abs","coordStrd","len","concat","round","replace","length","strAnswer","latStr","lngStr","todayCoords","start","Date","getTime","now","nDays","floor","data","_useState","useState","_useState2","Object","slicedToArray","todayAns","setTodayAns","useEffect","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","json","wrap","_context","prev","next","axios","get","sent","stop","GuessProvider","_ref2","children","_useState3","green","yellow","grey","_useState4","allGuess","setAllGuess","_useState5","_useState6","hasSolved","setHasSolved","ans","react_default","a","createElement","Provider","value","letter","index","decimalIndex","prevState","indexOf","includes","Cell","_ref","id","invalidGuess","toggleInvalidGuess","rowNum","addAttempt","currGuess","CurrGuessContext","updateCurrGuess","CurrGuessUpdateContext","updateAllGuess","guessIndex","GuessIndexContext","updateGuessIndex","GuessIndexUpdateContext","currRowIndex","useRowIndex","updatecurrRowIndex","RowIndexUpdateContext","isSignedCell","isComma","isDecimalCell","skipNextCell","setValue","tempClasses","setTempClasses","checkGuess","classes","toString","ansArr","split","tempArr","Array","fill","forEach","v","cellColor","handleKeyDown","event","key","substring","match","latGuess","parseFloat","lngGuess","isValidGuess","toConsumableArray","document","addEventListener","removeEventListener","className","memo","rowIndex","setCurrGuess","i","cells","keys","map","RowIndexContext","Grid","_ref$numRows","numRows","attempts","setGuessIndex","setRowIndex","rows","components_Row","Key","guesses","type","onClick","keyboardClick","KeyboardEvent","dispatchEvent","useIsMobile","window","innerWidth","width","setWidth","handleWindowSizeChange","Keyboard","isMobile","row","backspace","aria-hidden","Fragment","slice","ansData","console","log","loader","Loader","apiKey","version","libraries","center","mapOptions","zoom","mapTypeId","streetViewControl","mapTypeControl","scaleControl","restriction","latLngBounds","north","south","east","west","fullscreenControl","load","then","google","myMap","maps","Map","getElementById","Marker","position","catch","e","numerifyCoords","ansCoords","size","color","MyGlobe","markers","setMarkers","scrollMsg","setScrollMsg","guess","newCoord","answerCoord","onMouseEnter","onMouseLeave","react_globe_gl_module","globeImageUrl","backgroundColor","pointsData","pointAltitude","pointColor","height","pointLabel","d","role","aria-label","formatLocation","solveStatusMsg","solveStatus","arguments","undefined","numAttempts","SolvePopup","handleClose","loc","stopPropagation","random","EgGrid","example","exInd","Popup","InfoPopup_EgGrid","href","Navbar","attemptsLen","infoIsOpen","setInfoIsOpen","solveIsOpen","setSolveIsOpen","toggleInfoPopup","toggleSolvePopup","title","style","cursor","InfoPopup_Popup","require","config","App","setAttempts","components_Map","Grid_Grid","Keyboard_Keyboard","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.867bb41d.chunk.js","sourcesContent":["export const coordValues = [\n  {\n    lat: 38.98695,\n    lng: -94.61968,\n    city: \"Overland Park\",\n    prov: \"Kansas\",\n    state: \"United States\",\n    name: \"Meadow Lake Country Club\",\n    continent: \"North America\",\n    strCoords: \"\",\n  },\n  {\n    lat: -43.89834,\n    lng: 171.70011,\n    city: \"Ashburton\",\n    prov: \"Canterbury\",\n    state: \"New Zealand\",\n    name: \"Leafield\",\n    continent: \"Oceania\",\n    strCoords: \"\",\n  },\n  {\n    lat: 64.87137,\n    lng: 26.72718,\n    city: \"Juntunen\",\n    prov: \"Northern Ostrobothnia\",\n    state: \"Finland\",\n    name: \"Musta\",\n    continent: \"Europe\",\n    strCoords: \"\",\n  },\n  {\n    lat: 46.98999,\n    lng: -107.83178,\n    city: \"Mosby\",\n    prov: \"Montana\",\n    state: \"United States\",\n    name: \"North Fork Sage Hen Creek\",\n    continent: \"North America\",\n    strCoords: \"\",\n  },\n  {\n    lat: 42.21667,\n    lng: 102.06667,\n    city: \"Elst Hötöliyn Ovoo\",\n    prov: \"Ömnögovĭ\",\n    state: \"Mongolia\",\n    name: \"\",\n    continent: \"Asia\",\n    strCoords: \"\",\n  },\n  {\n    lat: -22.95,\n    lng: 115.883333,\n    city: \"Mount Florry\",\n    prov: \"\",\n    state: \"Australia\",\n    name: \"\",\n    continent: \"Oceania\",\n    strCoords: \"\",\n  },\n  {\n    lat: 34.2,\n    lng: 37.36667,\n    city: \"Jabal Ru’ūs\",\n    prov: \"Homs\",\n    state: \"Syria\",\n    name: \"ناحية القريتين (Al-Qaryatayn Subdistrict)\",\n    continent: \"Middle East\",\n    strCoords: \"\",\n  },\n  {\n    lat: 31.48038,\n    lng: -112.84932,\n    city: \"Jabal Ru’ūs\",\n    prov: \"Sonora\",\n    state: \"Mexico\",\n    name: \"Cerro El Tullido\",\n    continent: \"North America\",\n    strCoords: \"\",\n  },\n  {\n    lat: 12.72261,\n    lng: 106.00555,\n    city: \"Char Tnaol\",\n    prov: \"Kratie\",\n    state: \"Cambodia\",\n    name: \"Char Tnaol\",\n    continent: \"Asia\",\n    strCoords: \"\",\n  },\n  {\n    lat: 16.72226,\n    lng: 76.11456,\n    city: \"Bhairvadgi\",\n    prov: \"Karnataka\",\n    state: \"India\",\n    name: \"Bhairvadgi\",\n    continent: \"Asia\",\n    strCoords: \"\",\n  },\n  {\n    lat: -32.88786,\n    lng: 134.06667,\n    city: \"Westall\",\n    prov: \"South Australia\",\n    state: \"Australia\",\n    name: \"Point Westall\",\n    continent: \"Oceania\",\n    strCoords: \"\",\n  },\n  {\n    lat: -1.90898,\n    lng: -60.06045,\n    city: \"Sítio Selva de Pedra\",\n    prov: \"Amazonas\",\n    state: \"Brazil\",\n    name: \"Fazenda Círculo Gaúcho\",\n    continent: \"South America\",\n    strCoords: \"\",\n  },\n\n  {\n    lat: -16.65,\n    lng: -58.483333,\n    city: \"El Vi\",\n    prov: \"Santa Cruz\",\n    state: \"Bolivia\",\n    name: \"Córrego Morro Branco\",\n    continent: \"South America\",\n    strCoords: \"\",\n  },\n  // {\n  //   lat: 52.75,\n  //   lng: 101.33333,\n  //   city: \"Dayalyk\",\n  //   prov: \"Buryatiya Republic\",\n  //   state: \"Russia\",\n  //   name: \"\",\n  //   strCoords: \"\",\n  // },\n  {\n    lat: -12.33333,\n    lng: -38.55,\n    city: \"Sangradouro\",\n    prov: \"Bahia\",\n    state: \"Brazil\",\n    name: \"Sangradouro\",\n    continent: \"South America\",\n    strCoords: \"\",\n  },\n  {\n    lat: 55.14191,\n    lng: -110.74348,\n    city: \"Lakeland County\",\n    prov: \"Alberta\",\n    state: \"Canada\",\n    name: \"\",\n    continent: \"North America\",\n    strCoords: \"\",\n  },\n  {\n    lat: 66.51091,\n    lng: -115.66869,\n    city: \"Akaitcho Lake\",\n    prov: \"Nunavut\",\n    state: \"Canada\",\n    name: \"\",\n    continent: \"North America\",\n    strCoords: \"\",\n  },\n  {\n    lat: 34.80387,\n    lng: -118.12702,\n    city: \"Rosamond\",\n    prov: \"California\",\n    state: \"United States\",\n    name: \"Rainbow Farms (historical)\",\n    continent: \"North America\",\n    strCoords: \"\",\n  },\n  {\n    lat: 17.9521,\n    lng: 37.598,\n    city: \"Jibāl Wershiqanī\",\n    prov: \"Red Sea\",\n    state: \"Sudan\",\n    name: \"\",\n    continent: \"Africa\",\n    strCoords: \"\",\n  },\n  {\n    lat: 5.16667,\n    lng: 37.9,\n    city: \"Luk’aluk’ē Bota\",\n    prov: \"Oromiya\",\n    state: \"Ethiopia\",\n    name: \"\",\n    continent: \"Middle East\",\n    strCoords: \"\",\n  },\n  {\n    lat: 12.68,\n    lng: 54.12197,\n    city: \"\",\n    prov: \"Soqatra\",\n    state: \"Yemen\",\n    name: \"\",\n    continent: \"Middle East\",\n    strCoords: \"\",\n  },\n  {\n    lat: 42.18333,\n    lng: 53.66667,\n    city: \"Chagali\",\n    prov: \"\",\n    state: \"Turkmenistan\",\n    name: \"Chagali\",\n    continent: \"Asia\",\n    strCoords: \"\",\n  },\n  {\n    lat: 68.5,\n    lng: -132.666667,\n    city: \"Sitidgi Lake\",\n    prov: \"Inuvik\",\n    state: \"Canada\",\n    name: \"\",\n    continent: \"North America\",\n    strCoords: \"\",\n  },\n  {\n    lat: 54.68841,\n    lng: 110.81929,\n    city: \"Alla\",\n    prov: \"Buryatiya Republic\",\n    state: \"Russia\",\n    name: \"Alla\",\n    continent: \"Europe\",\n    strCoords: \"\",\n  },\n  {\n    lat: 49.78934,\n    lng: 73.13738,\n    city: \"Karagandy\",\n    prov: \"Karaganda\",\n    state: \"Kazakhstan\",\n    name: \"Malaya Bukpa\",\n    continent: \"Asia\",\n    strCoords: \"\",\n  },\n  {\n    lat: 32.85816,\n    lng: -109.45361,\n    city: \"Topaz Tank\",\n    prov: \"Arizona\",\n    state: \"United States\",\n    name: \"\",\n    continent: \"North America\",\n    strCoords: \"\",\n  },\n  {\n    lat: -52.82152,\n    lng: -72.90381,\n    city: \"Isla Chandler\",\n    prov: \"Region of Magallanes\",\n    state: \"Chile\",\n    name: \"\",\n    continent: \"South America\",\n    strCoords: \"\",\n  },\n  {\n    lat: -22.196389,\n    lng: 35.251667,\n    city: \"Cabo Murriane\",\n    prov: \"Inhambane\",\n    state: \"Mozambique\",\n    name: \"Lago Nhachinhate\",\n    continent: \"Africa\",\n    strCoords: \"\",\n  },\n  {\n    lat: 50.66667,\n    lng: 6.03333,\n    city: \"Lontzen\",\n    prov: \"\",\n    state: \"Belgium\",\n    name: \"\",\n    continent: \"Europe\",\n    strCoords: \"\",\n  },\n  {\n    lat: -19.0317,\n    lng: 28.78076,\n    city: \"\",\n    prov: \"Matabeleland North\",\n    state: \"Zimbabwe\",\n    name: \"\",\n    continent: \"Africa\",\n    strCoords: \"\",\n  },\n];\n\n// export default function todayCoords() {\n//   const start = new Date(\"2022 10 3\");\n//   const now = Date.now();\n//   const nDays = Math.floor((now - start) / (60 * 60 * 1000 * 24));\n//   return coordValues[coordValues.length % nDays];\n// }\n","import React, { useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { coordValues } from \"../utils/Values\";\nimport axios from \"axios\";\n\n// HAS SOLVED\nconst HasSolvedContext = React.createContext();\nconst HasSolvedUpdateContext = React.createContext();\nexport function useHasSolvedContext() {\n  return useContext(HasSolvedContext);\n}\nexport function useHasSolvedUpdateContext() {\n  return useContext(HasSolvedUpdateContext);\n}\n// Solved codes:\n// 0 = has not solved, game not over\n// 1 = has solved, game over\n// 2 = has not solved, game over\n\n// ALL GUESSES\nconst AllGuessContext = React.createContext();\nconst AllGuessUpdateContext = React.createContext();\nexport function useAllGuess() {\n  return useContext(AllGuessContext);\n}\nexport function useAllGuessUpdate() {\n  return useContext(AllGuessUpdateContext);\n}\n\n// ANS\nconst AnswerContext = React.createContext();\nexport function useAnswer() {\n  return useContext(AnswerContext);\n}\n// NEW: ANS API INTEGRATION\n\nconst preFixCoordStrs = (coord, isLng) => {\n  const absCoord = Math.abs(coord);\n  let coordStrd = coord > 0 ? \"+\" : \"-\";\n  const len = isLng ? 5 : 4;\n  if (absCoord < 1) {\n    coordStrd = coordStrd\n      .concat(isLng ? \"000\" : \"00\", Math.round(absCoord * 10) / 10.0)\n      .replace(\".\", \"\");\n  } else if (absCoord < 10) {\n    coordStrd = coordStrd\n      .concat(isLng ? \"00\" : \"0\", Math.round(absCoord * 10) / 10.0)\n      .replace(\".\", \"\");\n  } else if (isLng && absCoord < 100) {\n    coordStrd = coordStrd\n      .concat(isLng ? \"0\" : \"\", Math.round(absCoord * 10) / 10.0)\n      .replace(\".\", \"\");\n  } else {\n    coordStrd = coordStrd\n      .concat(Math.round(absCoord * 10) / 10.0)\n      .replace(\".\", \"\");\n  }\n\n  while (coordStrd.length < len) {\n    coordStrd = coordStrd.concat(\"0\");\n  }\n\n  return coordStrd;\n};\n\nconst strAnswer = (lat, lng) => {\n  let latStr = preFixCoordStrs(lat, false);\n  let lngStr = preFixCoordStrs(lng, true);\n  const ans = latStr.concat(lngStr);\n  // console.log(ans);\n  return ans;\n};\n\nconst todayCoords = () => {\n  const start = new Date(\"January 8, 2023 00:00:00\").getTime();\n  const now = Date.now();\n  const nDays = Math.floor((now - start) / (60 * 60 * 1000 * 24));\n  const data = coordValues[nDays % coordValues.length];\n  data.strCoords = strAnswer(data.lat, data.lng);\n  const [todayAns, setTodayAns] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const response = await axios.get(\n        `https://fjordle-api.herokuapp.com/todayCoord` // API\n      );\n      const json = await response.data;\n      // console.log(json);\n      // ERROR CHECK RESPONSE\n      if (json[0] !== []) {\n        setTodayAns(json[0]);\n      } else {\n        // fail safe\n        setTodayAns({\n          lat: 38.98695,\n          lng: -94.61968,\n          city: \"Overland Park\",\n          prov: \"Kansas\",\n          state: \"United States\",\n          name: \"Meadow Lake Country Club\",\n          continent: \"North America\",\n          strCoords: \"\",\n        });\n      }\n    })();\n  }, []);\n\n  if (todayAns !== 0) {\n    todayAns.strCoords = strAnswer(todayAns.lat, todayAns.lng);\n  }\n  return todayAns;\n  // return data;\n};\n\n// OLD: When coordinate data was local\n// const todayCoords = () => {\n//   const start = new Date(\"January 8, 2023 00:00:00\").getTime();\n//   const now = Date.now();\n//   const nDays = Math.floor((now - start) / (60 * 60 * 1000 * 24));\n//   const data = coordValues[nDays % coordValues.length];\n//   data.strCoords = strAnswer(data.lat, data.lng);\n//   return data;\n// };\n\nexport function GuessProvider({ children }) {\n  // ALL GUESSES\n  const [allGuess, setAllGuess] = useState({ green: [], yellow: [], grey: [] }); //check where this is used\n\n  // HAS SOLVED\n  const [hasSolved, setHasSolved] = useState(0);\n\n  // ANS\n  const ans = todayCoords();\n\n  function updateAllGuess(letter, index, decimalIndex) {\n    // console.log(letter);\n    // console.log(\"\\n\\nans\", ans);\n    // console.log(\"letter\", letter);\n    // console.log(\"ans.indexOf(letter)\", ans.indexOf(letter));\n    // console.log(\"ans[decimalIndex]\", ans[decimalIndex]);\n    // console.log(\"index of letter in guess\", index);\n\n    const strCoords = ans.strCoords;\n    if (strCoords[index] === letter) {\n      // console.log(\"green\");\n      setAllGuess((prevState) => ({\n        green:\n          prevState.green.indexOf(letter) < 0\n            ? prevState.green.concat(letter)\n            : prevState.green,\n        yellow: prevState.yellow,\n        grey: prevState.grey,\n      }));\n    } else if (strCoords.includes(letter)) {\n      // console.log(\"yellow\");\n      setAllGuess((prevState) => ({\n        green: prevState.green,\n        yellow:\n          prevState.yellow.indexOf(letter) < 0\n            ? prevState.yellow.concat(letter)\n            : prevState.yellow,\n        grey: prevState.grey,\n      }));\n    } else {\n      // console.log(\"grey\");\n      setAllGuess((prevState) => ({\n        green: prevState.green,\n        yellow: prevState.yellow,\n        grey:\n          prevState.grey.indexOf(letter) < 0\n            ? prevState.grey.concat(letter)\n            : prevState.grey,\n      }));\n    }\n\n    // console.log(\"allGuess in context: \", allGuess);\n  }\n\n  return (\n    <HasSolvedContext.Provider value={hasSolved}>\n      <HasSolvedUpdateContext.Provider value={setHasSolved}>\n        <AnswerContext.Provider value={ans}>\n          <AllGuessContext.Provider value={allGuess}>\n            <AllGuessUpdateContext.Provider value={updateAllGuess}>\n              {children}\n            </AllGuessUpdateContext.Provider>\n          </AllGuessContext.Provider>\n        </AnswerContext.Provider>\n      </HasSolvedUpdateContext.Provider>\n    </HasSolvedContext.Provider>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"../style/Grid.css\";\n\nimport {\n  useAnswer,\n  useAllGuessUpdate,\n  useHasSolvedContext,\n  useHasSolvedUpdateContext,\n} from \"../utils/Context\";\n\nimport {\n  useGuessIndex,\n  useGuessIndexUpdate,\n  useRowIndex,\n  useRowIndexUpdate,\n} from \"../components/Grid\";\n\nimport { useCurrGuess, useCurrGuessUpdate } from \"../components/Row\";\n\nexport default function Cell({\n  id,\n  decimalIndex,\n  invalidGuess,\n  toggleInvalidGuess,\n  rowNum,\n  addAttempt,\n  // currGuess, // if props drilled instead of context\n  // updateCurrGuess,\n}) {\n  const hasSolved = useHasSolvedContext();\n  const setHasSolved = useHasSolvedUpdateContext();\n  const currGuess = useCurrGuess();\n  const updateCurrGuess = useCurrGuessUpdate();\n  const updateAllGuess = useAllGuessUpdate();\n  const guessIndex = useGuessIndex();\n  const updateGuessIndex = useGuessIndexUpdate();\n  const ansData = useAnswer();\n  const ans = ansData.strCoords;\n  const currRowIndex = useRowIndex();\n  const updatecurrRowIndex = useRowIndexUpdate();\n\n  const isSignedCell = () => {\n    return (\n      (id % 12 === 0 || id % 12 === 6) &&\n      rowNum === currRowIndex &&\n      (value === \"\" || value === \"+/-\")\n    );\n  };\n  const isComma = () => {\n    return id % 12 === 5;\n  };\n  const isDecimalCell = () => {\n    return id % 12 === 3 || id % 12 === 10;\n  };\n  const skipNextCell = () => {\n    return id % 12 === 4 || id % 12 === 2 || id % 12 === 9;\n  };\n  const skipPrevCell = () => {\n    return id % 12 === 4 || id % 12 === 6 || id % 12 === 11;\n  };\n  const [value, setValue] = useState(\n    isDecimalCell() ? \".\" : isComma() ? \",\" : isSignedCell() ? \"+/-\" : \"\"\n  );\n\n  const [tempClasses, setTempClasses] = useState(\"\");\n\n  useEffect(() => {\n    if (rowNum === currRowIndex - 1) {\n      setTempClasses(checkGuess());\n    }\n  }, [currRowIndex]);\n\n  const isValidGuess = () => {\n    const latGuess = parseFloat(currGuess.substring(0, 4)) / 10.0;\n    const lngGuess = parseFloat(currGuess.substring(4, 12)) / 10.0;\n    return (\n      -90.0 <= latGuess &&\n      latGuess <= 90.0 &&\n      -180.0 <= lngGuess &&\n      lngGuess <= 180.0\n    );\n  };\n\n  const cellColor = () => {\n    const ansArr = ans.split(\"\");\n\n    const tempArr = Array(9).fill(null);\n    currGuess.split(\"\").forEach((v, index) => {\n      if (ansArr[index] === v) {\n        ansArr[index] = \"_\";\n        tempArr[index] = \"green\";\n      } else if (ansArr.indexOf(v) < 0) {\n        tempArr[index] = \"grey\";\n      }\n    });\n    currGuess.split(\"\").forEach((v, index) => {\n      if (!tempArr[index]) {\n        if (ansArr.indexOf(v) < 0) {\n          tempArr[index] = \"grey\";\n        } else {\n          ansArr[ansArr.indexOf(v)] = \"_\";\n          tempArr[index] = \"yellow\";\n        }\n      }\n    });\n    return tempArr[decimalIndex];\n  };\n\n  const checkGuess = () => {\n    const classes = \"Ind\" + (id % 12).toString();\n    if (!isDecimalCell() && !isComma()) {\n      if (value === \"\") {\n        return classes;\n      } else {\n        return classes + \" \" + cellColor();\n      }\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const key = event.key;\n      // console.log(\"\\n\\nKEYDOWN\", key);\n\n      // check backspace\n      if (key === \"Backspace\") {\n        if (id % 12 === 0) {\n          // console.log(\"Backspace1\");\n          setValue(\"+/-\");\n          updateCurrGuess(currGuess.substring(0, currGuess.length - 1));\n        } else if (value === \"\" || value === \"+/\") {\n          // console.log(\"BackspaceR\");\n          updateCurrGuess(currGuess.substring(0, currGuess.length - 1) + \"R\");\n          skipPrevCell()\n            ? updateGuessIndex(guessIndex - 2)\n            : updateGuessIndex(guessIndex - 1);\n        } else {\n          // console.log(\"Backspace3\");\n          setValue(isSignedCell() ? \"+/-\" : \"\");\n          updateCurrGuess(currGuess.substring(0, currGuess.length - 1));\n        }\n      } else if (isSignedCell()) {\n        if (key.match(/\\+|-/) && key.length === 1) {\n          // console.log(\"+/-\");\n          setValue(key);\n          updateCurrGuess(currGuess + key);\n          skipNextCell()\n            ? updateGuessIndex(guessIndex + 2)\n            : updateGuessIndex(guessIndex + 1);\n        }\n      } else if (key.match(/[0-9]/) && key.length === 1) {\n        // check last in row\n        if (id % 12 === 11 && value === \"\") {\n          // console.log(\"0-9 ( last)\");\n          setValue(key);\n          updateCurrGuess(currGuess + key);\n        } else if (id % 12 < 11) {\n          // console.log(\"0-9\");\n          setValue(key);\n          updateCurrGuess(currGuess + key);\n          skipNextCell()\n            ? updateGuessIndex(guessIndex + 2)\n            : updateGuessIndex(guessIndex + 1);\n        }\n      } else if (key === \"Enter\" && id % 12 === 11 && value !== \"\") {\n        if (isValidGuess()) {\n          // console.log(\"Enter (valid)\");\n          updatecurrRowIndex(currRowIndex + 1);\n          updateGuessIndex(guessIndex + 1);\n          [...currGuess].forEach((letter, index) => {\n            updateAllGuess(letter, index, decimalIndex);\n          });\n          addAttempt(currGuess);\n          if (currGuess === ans) {\n            // console.log(\"solved\");\n            setHasSolved(1);\n          } else {\n            if (id >= 59) {\n              setHasSolved(2);\n            }\n            // console.log(\"not solved\");\n          }\n          // updateCurrGuess(\"\");\n        } else {\n          // console.log(\"INVALID\");\n          invalidGuess ? toggleInvalidGuess(false) : toggleInvalidGuess(true);\n        }\n      }\n      // console.log(\"id\", id);\n      // console.log(\"guessIndex\", guessIndex);\n      // console.log(\"currGuess\", currGuess);\n      // console.log(\"ans\", ans);\n      // console.log(\"currRowIndex\", currRowIndex);\n      // console.log(\"allGuesses\", allGuesses);\n    };\n\n    if (guessIndex === id && hasSolved < 1) {\n      if (currGuess.indexOf(\"R\") > -1) {\n        updateCurrGuess(currGuess.substring(0, currGuess.length - 1));\n\n        setValue(\"\");\n      }\n      document.addEventListener(\"keydown\", handleKeyDown);\n      return () => {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n      };\n    }\n  });\n\n  return (\n    <div\n      className={`cell ${\n        guessIndex === id && rowNum === currRowIndex ? \"curr\" : \"\"\n      } ${value !== \"\" && value !== \"+/-\" ? \"guessed\" : \"\"} ${tempClasses} ${\n        isSignedCell() ? \"signedCell\" : \"\"\n      } ${isDecimalCell() ? \"decimalCell\" : \"\"} ${\n        isComma() ? \"commaCell\" : \"\"\n      } `}\n    >\n      <span>{isSignedCell() ? \"+/-\" : value}</span>\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport \"../style/Grid.css\";\nimport Cell from \"./Cell\";\n\nimport { useHasSolvedContext } from \"../utils/Context\";\nimport { useRowIndex } from \"../components/Grid\";\n\n// CURR GUESSS\nconst CurrGuessContext = React.createContext();\nconst CurrGuessUpdateContext = React.createContext();\nexport function useCurrGuess() {\n  return useContext(CurrGuessContext);\n}\nexport function useCurrGuessUpdate() {\n  return useContext(CurrGuessUpdateContext);\n}\n\nfunction Row({ rowNum, addAttempt }) {\n  const hasSolved = useHasSolvedContext();\n  const rowIndex = useRowIndex();\n  const [invalidGuess, toggleInvalidGuess] = useState(false);\n\n  // console.log(\"row \");\n\n  // CURR GUESSS\n  const [currGuess, setCurrGuess] = useState(\"\");\n  function updateCurrGuess(i) {\n    setCurrGuess(i);\n  }\n\n  const cells = [...Array(12).keys()].map((i) => (\n    <Cell\n      id={i + rowNum * 12}\n      decimalIndex={i > 10 ? i - 3 : i > 5 ? i - 2 : i > 3 ? i - 1 : i}\n      key={i}\n      rowNum={rowNum}\n      invalidGuess={invalidGuess}\n      toggleInvalidGuess={toggleInvalidGuess}\n      addAttempt={addAttempt}\n      currGuess={currGuess}\n      updateCurrGuess={updateCurrGuess}\n    />\n  ));\n\n  return (\n    <CurrGuessContext.Provider value={currGuess}>\n      <CurrGuessUpdateContext.Provider value={updateCurrGuess}>\n        <div>\n          <div\n            className={`row ${invalidGuess ? \" invalid \" : \"\"} ${\n              hasSolved === 1 && rowIndex === rowNum + 1 ? \"solved-row\" : \"\"\n            } `}\n          >\n            {cells}\n          </div>\n        </div>\n      </CurrGuessUpdateContext.Provider>\n    </CurrGuessContext.Provider>\n  );\n}\n\nexport default React.memo(Row);\n","import React, { useState, useContext } from \"react\";\nimport \"../style/Grid.css\";\nimport Row from \"./Row\";\n\n// GUESS INDEX\nconst GuessIndexContext = React.createContext();\nconst GuessIndexUpdateContext = React.createContext();\nexport function useGuessIndex() {\n  return useContext(GuessIndexContext);\n}\nexport function useGuessIndexUpdate() {\n  return useContext(GuessIndexUpdateContext);\n}\n\n// ROW INDEX\nconst RowIndexContext = React.createContext();\nconst RowIndexUpdateContext = React.createContext();\nexport function useRowIndex() {\n  return useContext(RowIndexContext);\n}\nexport function useRowIndexUpdate() {\n  return useContext(RowIndexUpdateContext);\n}\n\nexport default function Grid({ addAttempt, numRows = 5, attempts }) {\n  // console.log(\"grid\");\n  // GUESS INDEX\n  const [guessIndex, setGuessIndex] = useState(0);\n  function updateGuessIndex(i) {\n    setGuessIndex(i);\n  }\n\n  // ROW INDEX\n  const [rowIndex, setRowIndex] = useState(0); //MOVE TO GRID PROPERTY\n  function updateRowIndex(i) {\n    setRowIndex(i);\n  }\n\n  const rows = [...Array(numRows).keys()].map((i) => (\n    <Row rowNum={i} key={i} addAttempt={addAttempt} />\n  ));\n  return (\n    <GuessIndexContext.Provider value={guessIndex}>\n      <GuessIndexUpdateContext.Provider value={updateGuessIndex}>\n        <RowIndexContext.Provider value={rowIndex}>\n          <RowIndexUpdateContext.Provider value={updateRowIndex}>\n            <div>\n              <div className=\"gridHolder\">{rows}</div>\n            </div>\n          </RowIndexUpdateContext.Provider>\n        </RowIndexContext.Provider>\n      </GuessIndexUpdateContext.Provider>\n    </GuessIndexContext.Provider>\n  );\n}\n","import React from \"react\";\nimport \"../style/Keyboard.css\";\n\nimport { useAllGuess } from \"../utils/Context\";\n\nexport default function Key({ letter, id }) {\n  const guesses = useAllGuess();\n\n  const handlePress = (event) => {\n    const keyboardClick = new KeyboardEvent(\"keydown\", {\n      key: id,\n    });\n    document.dispatchEvent(keyboardClick);\n  };\n\n  return (\n    <button\n      className={`kybrdKey ${\n        guesses.green.includes(letter)\n          ? \"green\"\n          : guesses.yellow.includes(letter)\n          ? \"yellow\"\n          : guesses.grey.includes(letter)\n          ? \"grey\"\n          : \"\"\n      } ${id === \"Enter\" || id === \"Backspace\" ? \"value-key\" : \"big-key\"}`}\n      type=\"button\"\n      key={letter}\n      onClick={handlePress}\n    >\n      {letter}\n    </button>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport function useIsMobile() {\n  const [width, setWidth] = useState(window.innerWidth < 900);\n\n  useEffect(() => {\n    function handleWindowSizeChange() {\n      setWidth(window.innerWidth < 900);\n    }\n\n    window.addEventListener(\"resize\", handleWindowSizeChange);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\n    };\n  }, []);\n\n  return width;\n}\n","import React from \"react\";\nimport \"../style/Keyboard.css\";\nimport Key from \"./Key\";\nimport { useIsMobile } from \"../utils/hooks\";\n// import { useRowIndexUpdate } from \"./Grid\";\n\nexport default function Keyboard() {\n  const isMobile = useIsMobile();\n  const rowArr = isMobile\n    ? [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"-\", \"0\", \"+\", \"ENTER\"]\n    : [\"ENTER\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"-\", \"+\"];\n  const row = rowArr.map((letter, index) => (\n    <Key\n      letter={letter}\n      id={letter === \"ENTER\" ? \"Enter\" : letter}\n      key={index}\n    />\n  ));\n\n  const backspace = (\n    <Key\n      id={\"Backspace\"}\n      key={13}\n      letter={\n        <i className=\"fa fa-angle-double-left icon\" aria-hidden=\"true\"></i>\n      }\n    />\n  );\n\n  return (\n    <div className=\"board\">\n      {isMobile ? (\n        <>\n          <div className=\"kybrdRow\">{row.slice(0, -1)}</div>\n          <div className=\"kybrdRowMobile\">\n            {row[row.length - 1]} {backspace}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"kybrdRow\">\n            {row} {backspace}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../style/Geo.css\";\nimport { useHasSolvedContext, useAnswer } from \"../utils/Context\";\n\nimport { Loader } from \"@googlemaps/js-api-loader\";\n\n// GOOGLE-supported node package\nfunction Map() {\n  const ansData = useAnswer();\n  const hasSolved = useHasSolvedContext();\n\n  // wait until we get today's coords from db api\n  if (ansData) {\n    console.log(\"pssst!... today's coordinates are \", ansData.strCoords);\n  }\n\n  const loader = new Loader({\n    apiKey: \"key\", //process.env.MAPS_INFO, //\"key\",\n    version: \"weekly\",\n    libraries: [\"places\", \"marker\"],\n  });\n\n  const center = {\n    lat: ansData ? ansData.lat : null,\n    lng: ansData ? ansData.lng : null,\n  };\n\n  const mapOptions = {\n    center: center,\n    zoom: 18,\n    mapTypeId: \"satellite\",\n    streetViewControl: false,\n    mapTypeControl: hasSolved !== 0,\n    scaleControl: true,\n    restriction:\n      hasSolved !== 0\n        ? null\n        : {\n            latLngBounds: {\n              north: center.lat + 0.03,\n              south: center.lat - 0.03,\n              east: center.lng + 0.03,\n              west: center.lng - 0.03,\n            },\n          },\n    fullscreenControl: true,\n  };\n\n  // Promise\n  loader\n    .load()\n    .then((google) => {\n      // console.log(\"google\", google);\n      const myMap = new google.maps.Map(\n        document.getElementById(\"mapHolder\"),\n        mapOptions\n      );\n      // console.log(\"myMap\", myMap);\n      new google.maps.Marker({\n        position: center,\n        map: myMap,\n      });\n    })\n    .catch((e) => {\n      console.log(\"ERROR:\", e);\n    });\n}\n\n// prevent unnecessary reloads of map (and API calls)\nexport default React.memo(Map);\n","import React, { useState, useEffect } from \"react\";\nimport Globe from \"react-globe.gl\";\nimport \"../style/Geo.css\";\nimport { useIsMobile } from \"../utils/hooks\";\nimport { useAnswer } from \"../utils/Context\";\n\nconst numerifyCoords = (strCoords, index, ansCoords) => {\n  const lat = parseFloat(strCoords.substring(0, 4)) / 10;\n  const lng = parseFloat(strCoords.substring(4, 9)) / 10;\n  return {\n    lat: lat,\n    lng: lng,\n    size: 0.3,\n    color:\n      ansCoords === strCoords ? \"rgb(121, 167, 107)\" : \"rgb(198, 179, 102)\",\n    index: index,\n  };\n};\n\nexport default function MyGlobe({ attempts }) {\n  const [markers, setMarkers] = useState([]);\n\n  const [scrollMsg, setScrollMsg] = useState(false);\n\n  const ansCoords = useAnswer().strCoords;\n  const guess = attempts[attempts.length - 1];\n  const isMobile = useIsMobile();\n  useEffect(() => {\n    if (attempts.length > 0) {\n      const newCoord = numerifyCoords(guess, attempts.length, ansCoords);\n      // add actual coord\n      if (attempts.length === 5 && ansCoords !== guess) {\n        const answerCoord = numerifyCoords(ansCoords, -1, ansCoords);\n        setMarkers(markers.concat(newCoord, answerCoord));\n      } else {\n        setMarkers(markers.concat(newCoord));\n      }\n    }\n  }, [attempts]);\n  return (\n    <div\n      className={`globeHolder ${isMobile ? \"mobile\" : \"\"}`}\n      onMouseEnter={() => setScrollMsg(true)}\n      onMouseLeave={() => setScrollMsg(false)}\n    >\n      <Globe\n        globeImageUrl=\"./earth-blue-marble.jpeg\"\n        backgroundColor=\"#FFFFFF\"\n        pointsData={markers}\n        pointAltitude=\"size\"\n        pointColor=\"color\"\n        height={200}\n        width={200}\n        pointLabel={(d) =>\n          ` <b>${\n            d[\"index\"] < 0 ? \"Answer\" : `Attempt ${d[\"index\"]}`\n          }:</b> <br>(${d[\"lat\"]}, ${d[\"lng\"]})`\n        }\n      />\n      {scrollMsg && (\n        <p className=\"globe-msg\">\n          Drag and zoom to see your guesses on the globe{\" \"}\n          <span role=\"img\" className=\"emoji\" aria-label=\"red pin\">\n            📍\n          </span>\n          .\n        </p>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../../style/Popup.css\";\n\nimport { useAnswer, useHasSolvedContext } from \"../../utils/Context\";\n\nconst formatLocation = (ans) => {\n  return (\n    (ans.name ? \" near \" + ans.name + \" in \" : ans.city ? \" near \" : \" in \") +\n    (ans.city ? ans.city + \", \" : \"\") +\n    (ans.prov ? ans.prov + \", \" : \"\") +\n    (ans.state ? ans.state + \".\" : \".\")\n  );\n};\n\nconst solveStatusMsg = (solveStatus = 0, numAttempts) => {\n  if (solveStatus === 2) {\n    return \"Nice try!\";\n  } else if (solveStatus === 1) {\n    //check attempts length for # guesses\n    return `Great job! You solved the FJORDLE in ${numAttempts} attempt${\n      numAttempts > 1 ? \"s\" : \"\"\n    }.`;\n  } else {\n    return \"Great effort!\";\n  }\n};\n\nexport default function SolvePopup({ handleClose, numAttempts }) {\n  const ansData = useAnswer();\n  const solveStatus = useHasSolvedContext();\n  const loc = formatLocation(ansData);\n\n  return (\n    <div className=\"popup-box\" onClick={handleClose}>\n      <div className=\"content-box solve\" onClick={(e) => e.stopPropagation()}>\n        <button type=\"button\" onClick={handleClose}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n        </button>\n        <div className=\"subtitle-holder\">\n          <span className=\"subtitle\">\n            <i className=\"fa fa-check-circle revealed\" aria-hidden=\"true\"></i>{\" \"}\n            SUMMARY\n          </span>\n        </div>\n        <div className=\"stats\">\n          <p>{solveStatusMsg(solveStatus, numAttempts)}</p>\n        </div>\n        <div className=\"location\">\n          {/* <h5></h5> */}\n          <p>\n            ({Math.round(ansData.lat * 10) / 10},{\" \"}\n            {Math.round(ansData.lng * 10) / 10}) is {loc}\n          </p>\n        </div>\n        {/* <div className=\"share\">\n          <h5>Share results</h5>\n          <p> </p>\n        </div> */}\n        <h4 className=\"endtext\">\n          Come back again tomorrow!{\" \"}\n          {[\"🌎\", \"🌍\", \"🌏\", \"🗺\"][Math.floor(Math.random() * 4)]}\n        </h4>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../../style/Popup.css\";\nimport { useIsMobile } from \"../../utils/hooks\";\n\nconst EgGrid = ({ example, exInd, color }) => {\n  const cells = [...Array(12).keys()].map((i) => (\n    <div\n      className={`example-grid-cell ${i === 3 || i === 10 ? \"decimal\" : \"\"} ${\n        i === 5 ? \"comma\" : \"\"\n      } ${i === exInd ? color : \"\"}`}\n      key={i}\n    >\n      <span>{example[i]}</span>\n    </div>\n  ));\n  return (\n    <div className=\"example-grid-holder\">\n      <div className=\"example-grid-row\">{cells}</div>\n    </div>\n  );\n};\n\nexport default function Popup({ handleClose }) {\n  const isMobile = useIsMobile();\n  return (\n    <div className=\"popup-box\" onClick={handleClose}>\n      <div className=\"content-box\" onClick={(e) => e.stopPropagation()}>\n        <button type=\"button\" onClick={handleClose}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n        </button>\n        <div className=\"subtitle-holder\">\n          <span className=\"subtitle\">\n            <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> HOW TO PLAY\n          </span>\n        </div>\n        <div className=\"instructions\">\n          <p>\n            Guess the <b>FJORDLE</b> location shown on the Google Map in 5 tries\n            <span role=\"img\" className=\"emoji\" aria-label=\"sunrise over fjord\">\n              {\" \"}\n              🌄\n            </span>\n            .\n          </p>\n\n          <p>\n            Zoom in and out of the map to get a better look at the area{\" \"}\n            <span\n              role=\"img\"\n              className=\"emoji\"\n              aria-label=\"magnifying glass and map\"\n            >\n              🔎 🗺️\n            </span>\n            . Each guess must be a valid latitude-longitude coordinate in\n            decimal degree notation, <b>including plus-minus (+/-) signage</b>{\" \"}\n            <span\n              role=\"img\"\n              className=\"emoji\"\n              aria-label=\"globe with horizonal and vertical lines\"\n            >\n              🌐\n            </span>\n            . Hit the enter button to submit{\" \"}\n            <span role=\"img\" className=\"emoji\" aria-label=\"check mark\">\n              ✅\n            </span>\n            .\n          </p>\n\n          <p>\n            After each guess, the color of the tiles will change to indicate how\n            close your guess was to the coordinate{\" \"}\n            <span role=\"img\" className=\"emoji\" aria-label=\"colored tiles\">\n              🟩 🟨 ⬛️\n            </span>\n            .{\" \"}\n            {!isMobile ? (\n              <>\n                Your guess will also be displayed on the globe on the right\n                <span role=\"img\" className=\"emoji\" aria-label=\"arrow\">\n                  {\" \"}\n                  ➡️\n                </span>\n                .\n              </>\n            ) : (\n              ``\n            )}\n          </p>\n        </div>\n\n        <div className=\"examples\">\n          <h4>Examples</h4>\n          <EgGrid example={\"+36.9,+007.7\"} exInd={4} color={\"green\"} />\n          <p>\n            The number <b>9</b> is in the coordinate pair and in the correct\n            spot.\n          </p>\n          {isMobile ? `` : <br></br>}\n          <EgGrid example={\"-19.2,-061.1\"} exInd={8} color={\"yellow\"} />\n          <p>\n            The number <b>6</b> is in the coordinate pair but in the wrong spot.\n          </p>\n          {isMobile ? `` : <br></br>}\n          <EgGrid example={\"+52.1,+130.8\"} exInd={1} color={\"grey\"} />\n          <p>\n            The number <b>5</b> is not in the coordinate pair in any spot.\n          </p>\n          {isMobile ? `` : <br></br>}\n        </div>\n\n        <div className=\"contact\">\n          <p>\n            Found a{\" \"}\n            <span role=\"img\" className=\"emoji\" aria-label=\"bug\">\n              🪳\n            </span>\n            ? Reach out:{\" \"}\n            <a href=\"mailto:contact.fjordle@gmail.com\">\n              contact.fjordle@gmail.com\n            </a>{\" \"}\n          </p>\n        </div>\n\n        <h4 className=\"endtext\">\n          {/* style={{ fontSize: \".6rem\" }}> */}A new FJORDLE will be available\n          each day!\n        </h4>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport SolvePopup from \"./Popups/SolvePopup\";\nimport Popup from \"./Popups/InfoPopup\";\n\nimport { useHasSolvedContext } from \"../utils/Context\";\n\nexport default function Navbar({ attemptsLen }) {\n  // console.log(\"navbar\");\n  const hasSolved = useHasSolvedContext();\n  const [infoIsOpen, setInfoIsOpen] = useState(true); //useState(false);\n  const [solveIsOpen, setSolveIsOpen] = useState(false);\n  const toggleInfoPopup = () => {\n    setInfoIsOpen(!infoIsOpen);\n  };\n  const toggleSolvePopup = () => {\n    setSolveIsOpen(!solveIsOpen);\n  };\n\n  // When fjordle first solved, Solve popup appears\n  useEffect(() => {\n    setSolveIsOpen(true);\n  }, [hasSolved]);\n\n  return (\n    <>\n      <nav>\n        <div className=\"icons\">\n          <button type=\"button\" title=\"Info\" onClick={toggleInfoPopup}>\n            <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n          </button>\n          {/* <button type=\"button\" title=\"Help\" onClick={null}>\n            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n          </button> */}\n          <button\n            type=\"button\"\n            title=\"Revealed on game end\"\n            onClick={hasSolved ? toggleSolvePopup : null}\n            style={{ cursor: hasSolved ? \"pointer\" : \"auto\" }}\n          >\n            <i\n              className={`fa fa-check-circle ${hasSolved ? \"revealed\" : \"\"}`}\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n        <div>\n          <span className=\"title\">Fjordle</span>\n        </div>\n      </nav>\n      <div className=\"popups\">\n        {hasSolved > 0 && solveIsOpen && (\n          <SolvePopup\n            className=\"solve-popup\"\n            handleClose={toggleSolvePopup}\n            numAttempts={attemptsLen}\n          />\n        )}\n        {infoIsOpen && <Popup handleClose={toggleInfoPopup} />}\n      </div>\n    </>\n  );\n}\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Grid from \"./components/Grid\";\nimport Keyboard from \"./components/Keyboard\";\nimport Map from \"./components/Map\";\nimport { GuessProvider } from \"./utils/Context\";\nimport MyGlobe from \"./components/Globe\";\nimport Navbar from \"./components/Navbar\";\nrequire(\"dotenv\").config();\n\nfunction App() {\n  const [attempts, setAttempts] = useState([]);\n  const addAttempt = (strCoords) => {\n    setAttempts(attempts.concat(strCoords));\n  };\n  return (\n    <>\n      <GuessProvider>\n        <div className=\"App\">\n          <Navbar attemptsLen={attempts.length} />\n          <MyGlobe attempts={attempts} />\n          <div id=\"mapHolder\"></div>\n          <Map />\n          <Grid addAttempt={addAttempt} attempts={attempts} />\n          <Keyboard />\n        </div>\n      </GuessProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <>\n    <App />\n  </>\n);\n// removed <React.StrictMode></React.StrictMode> from around <App/>\n// STRICT MODE MESSED UP GLOBE POINTS RENDERING (??!!)\n\n// const root2 = ReactDOM.createRoot(document.getElementById(\"globeView\"));\n// root2.render(<MyGlobe />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}